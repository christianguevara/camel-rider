<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">



    <bean id="orderProcessor" class="com.savoirtech.camelrider.OrderProcessor"/>

    <!-- CXF Restful Component -->

    <!-- Instantiate a jsonProvider to handle JSON payloads -->
    <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider"/>

    <!-- CXF restful server endpoint -->
    <cxf:rsServer id="orderService" address="http://localhost:9090/rest"
                  serviceClass="com.savoirtech.camelrider.rest.OrdersResource">
        <cxf:providers>
            <ref bean="jsonProvider"/>
        </cxf:providers>
    </cxf:rsServer>

    <!-- ActiveMQ component -->
    <bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>

    <bean id="amqPooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="maxConnections" value="5"/>
        <property name="maximumActiveSessionPerConnection" value="5"/>
        <property name="connectionFactory" ref="amqConnectionFactory"/>
    </bean>

    <bean id="consumerJmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="amqConnectionFactory"/>
        <property name="concurrentConsumers" value="5"/>
    </bean>

    <bean id="producerJmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="amqPooledConnectionFactory"/>
        <property name="cacheLevelName" value="CACHE_NONE"/>
    </bean>

    <!-- Set up the consumer -->
    <bean id="jmsConsumer" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory" ref="amqConnectionFactory"/>
        <property name="configuration" ref="consumerJmsConfig"/>
    </bean>

    <!-- Set up the producer -->
    <bean id="jmsProducer" class="org.apache.camel.component.jms.JmsComponent">
        <property name="configuration" ref="producerJmsConfig"/>
    </bean>

    <!--dataFormats xmlns="http://camel.apache.org/schema/spring">
        <json library="XStream"
    </dataFormats-->

    <!-- Camel configuration -->
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">

        <!-- Accept the order -->
        <route>
            <from uri="cxfrs:bean:orderService"/>
            <wireTap uri="jmsProducer:queue:orders?disableReplyTo=true"/>
            <to uri="orderProcessor"/>
        </route>

        <!-- Split the order to manufacturers -->
        <route>
            <from uri="jmsConsumer:queue:orders?disableReplyTo=true"/>
            <split>
                <method beanType="com.savoirtech.camelrider.ProductSplitter" method="splitProducts"/>
                <choice>
                    <when>
                        <simple>${in.header.manufacturer} == 'abc'</simple>
                        <to uri="jmsProducer:queue:abc_company"/>
                    </when>
                    <when>
                        <simple>${in.header.manufacturer} == 'xyz'</simple>
                        <to uri="jmsProducer:queue:xyz_company"/>
                    </when>
                    <otherwise>
                        <to uri="jmsProducer:queue:no_idea"/>
                    </otherwise>
                </choice>
            </split>
        </route>

        <!-- ABC Company's route -->
        <route>
            <from uri="jmsConsumer:queue:abc_company?disableReplyTo=true"/>
            <marshal>
                <json/>
            </marshal>
            <to uri="file://target/manufacturers/abc?fileName=order-${date:now:yyyyMMddHHmmss}.json"/>
        </route>

        <!-- XYZ Company's route -->
        <route>
            <from uri="jmsConsumer:queue:xyz_company?disableReplyTo=true"/>
            <marshal>
                <json/>
            </marshal>
            <to uri="file://target/manufacturers/xyz?fileName=order-${date:now:yyyyMMddHHmmss}.json"/>
        </route>

    </camelContext>


</beans>